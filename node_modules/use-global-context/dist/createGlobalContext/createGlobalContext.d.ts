import { FC } from 'react';
import { Store } from '../core/store';
import { UseSelector } from '../core/useSelector';
import { GlobalContextReducers, GlobalContextValue } from './type';
interface StateController<T extends GlobalContextReducers> {
    getState: () => Store<T>['state'];
    setState: Store<T>['setState'];
}
export declare type CreateGlobalContextResult<T extends GlobalContextReducers> = [
    UseSelector<GlobalContextValue<T>>,
    FC,
    StateController<T>
];
export declare const createGlobalContext: <T extends GlobalContextReducers>(reducers: T) => CreateGlobalContextResult<T>;
export {};
