import { Store } from '../core/store';
import { Subscription } from '../core/subscription';
import { GlobalContextReducers, GlobalContextValue, ReducerDispatch } from './type';
interface CreateDispatchArgs<T extends GlobalContextReducers> {
    getStore: Store<T>['getStore'];
    setPartialState: Store<T>['setPartialState'];
    trySubscribe: Subscription<GlobalContextValue<T>>['trySubscribe'];
    partial: keyof T;
    reducer: T[keyof T]['reducer'];
}
export declare const createDispatch: <T extends GlobalContextReducers>({ getStore, setPartialState, trySubscribe, partial, reducer, }: CreateDispatchArgs<T>) => ReducerDispatch<T[keyof T]["reducer"]>;
export {};
